version: 2.1

executors:
  linux:
    docker:
      - image: pkarnakov/aphros-gcc-openmpi:0.1

orbs:
  win: circleci/windows@2.2.0

# In the Project Settings,
# set environment variable CacheSuff to any string (e.g. v8)
# Change its value to ignore cache.

jobs:
  build:
    executor: linux
    working_directory: ~/aphros
    steps:
      - restore_cache:
          keys:
            - build-{{ .Environment.CacheSuff }}
      - checkout:
          path: ../aphros_tmp
      - run:
          name: Checkout code revision
          command: |
            test -d .git || cp -av ../aphros_tmp/. ./
            git fetch
            git checkout << pipeline.git.revision >>
      - run:
          name: Build dependencies
          command: |
            cd deploy
            ./install_setenv -f ~/opt/aphros
            . ~/.local/bin/ap.setenv
            mkdir -p build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Release ..
            make -j4
            make install
            cd ../..
      - run:
          name: Build source
          command: |
            . ~/.local/bin/ap.setenv
            mkdir -p src/build
            cd src/build
            cmake -DCMAKE_BUILD_TYPE=Release ..
            make -j4
            make install
            cd ../..
      - save_cache:
          key: build-{{ .Environment.CacheSuff }}-{{ .Revision }}
          paths:
            - ~/aphros
            - ~/opt
            - ~/.local
      - persist_to_workspace:
          root: ~/
          paths:
            - aphros
            - .local
            - opt

  test:
    executor: linux
    working_directory: ~/aphros
    environment:
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_btl_vader_single_copy_mechanism: none
    parallelism: 4
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Test
          command: |
            . ~/.local/bin/ap.setenv
            cd src/build
            ctest -N | cut -d: -f 2 | head -n -2 | tail -n +2 > list
            circleci tests split list | xargs -n 1 echo | tr '\n' '|' | sed 's/.$//' > listsplit
            ctest -j 4 -R "$(cat listsplit)"
      - store_artifacts:
          path: /root/aphros/src/build/Testing/Temporary/LastTest.log
          destination: LastTest.log

  examples:
    executor: linux
    working_directory: ~/aphros
    environment:
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
      OMPI_MCA_btl_vader_single_copy_mechanism: none
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Examples
          command: |
            . ~/.local/bin/ap.setenv
            cd examples
            make build VERBOSE=1 -j4

  build-win:
    executor: win/default
    working_directory: C:\Users\circleci\aphros
    steps:
      - restore_cache:
          keys:
            - build-win-{{ .Environment.CacheSuff }}
      - checkout:
          path: ..\aphros_tmp
      - run:
          name: Checkout code revision
          command: |
            bash -c 'test -d .git || cp -av ../aphros_tmp/. ./'
            git fetch
            git checkout << pipeline.git.revision >>
      - run:
         name: Build source
         shell: cmd.exe
         command: |
            cd src & call ..\.circleci\main.bat
      - save_cache:
          key: build-win-{{ .Environment.CacheSuff }}-{{ .Revision }}
          paths:
            - C:\Users\circleci\aphros

  build-mac:
    macos:
      xcode: 12.4.0
    working_directory: ~/aphros
    steps:
      - restore_cache:
          keys:
            - build-mac-{{ .Environment.CacheSuff }}
      - checkout:
          path: ../aphros_tmp
      - run:
          name: Checkout code revision
          command: |
            test -d .git || cp -av ../aphros_tmp/. ./
            git fetch
            git checkout << pipeline.git.revision >>
      - run:
          name: Install dependencies
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install hdf5-mpi
      - run:
          name: Build source
          command: |
            cd src && make -j4 -f Makefile_legacy USE_MPI=1 USE_HDF=1 CXX=h5pcc ENV_HDF= LDFLAGS=-lstdc++
      - run:
          name: Run executable
          command: |
            cd src && ./main --logo --exit
      - save_cache:
          key: build-mac-{{ .Environment.CacheSuff }}-{{ .Revision }}
          paths:
            - ~/aphros

workflows:
  build-test-examples:
    jobs:
      - build
      - test:
          requires:
            - build
      - examples:
          requires:
            - build
      - build-win
      - build-mac
