.POSIX:
.SUFFIXES:
SRC = .
WRK = .
L = libaphros_static.a
J = libaphros_js.a
K = libaphros_shared.so
USE_AVX = 0
USE_AMGX = 0
USE_BACKEND_CUBISM = 0
USE_HDF = 0
USE_HYPRE = 0
USE_MPI = 0
USE_OPENCL = 0
USE_OPENMP = 1
CXXFLAGS = -O2 -g
CFLAGS = -O2 -g
CXXFLAGS_STD = -std=c++14
FLAGS_FPIC = -fPIC
CC_RULE = $(CC) -c $(CFLAGS) $(FLAGS_FPIC) -o $@
CXX_RULE = $(ENV_HDF) $(CXX) -c $(CXXFLAGS) $(CXXFLAGS_STD) $(CXXFLAGS_AMGX) $(CXXFLAGS_AVX) $(CXXFLAGS_HYPRE) $(CXXFLAGS_BACKEND_CUBISM) $(FLAGS_FPIC) -I$(SRC) $1 -o $@
LINK = $(ENV_HDF) $(CXX)
LINK_FLAGS = $(WRK)/$L $(LDFLAGS) $(LDFLAGS_AMGX) $(LDFLAGS_OPENCL) $(LDFLAGS_HYPRE) $(LDFLAGS_BACKEND_CUBISM) -o $@
1 = \
-D_ALIGNBYTES_=16 \
-D_USE_BACKEND_LOCAL_=1 \
-D_USE_BACKEND_NATIVE_=1 \
-D_USE_DIM1_=0 \
-D_USE_DIM2_=1 \
-D_USE_DIM3_=1 \
-D_USE_DIM4_=0 \
-D_USE_FPZIP_=0 \
-D_USE_AMGX_=$(USE_AMGX) \
-D_USE_AVX_=$(USE_AVX) \
-D_USE_BACKEND_CUBISM_=$(USE_BACKEND_CUBISM) \
-D_USE_HDF_=$(USE_HDF) \
-D_USE_HYPRE_=$(USE_HYPRE) \
-D_USE_MPI_=$(USE_MPI) \
-D_USE_OPENCL_=$(USE_OPENCL) \
-D_USE_OPENMP_=$(USE_OPENMP) \

all: $(WRK)/$L $(WRK)/main $(WRK)/explorer
include $(SRC)/../make/$(USE_BACKEND_CUBISM)backend_cubism.mk
include $(SRC)/../make/$(USE_AMGX)amgx.mk
include $(SRC)/../make/$(USE_AVX)avx.mk
include $(SRC)/../make/$(USE_HDF)hdf.$(USE_MPI)mpi.mk
include $(SRC)/../make/$(USE_HYPRE)hypre.mk
include $(SRC)/../make/$(USE_OPENCL)opencl.mk
include $(SRC)/../make/hdr.mk
include $(SRC)/../make/unix/bin.mk
include $(SRC)/../make/unix/dep.mk
include $(SRC)/../make/unix/dir.dep.mk
include $(SRC)/../make/unix/dir.mk
include $(SRC)/../make/unix/dir.rule.mk
include $(SRC)/../make/unix/obj.mk
include $(SRC)/../make/unix/rule.mk

$(WRK)/$L: $O $(O_MPI) $(O_OPENCL) $(O_AMGX) $(O_HYPRE) $(O_BACKEND_CUBISM); mkdir -p $(WRK) && ar rv $@ $O $(O_MPI) $(O_OPENCL) $(O_AMGX) $(O_HYPRE) $(O_BACKEND_CUBISM) && ranlib $@
$(WRK)/$J: $O $(O_MPI) $(O_OPENCL) $(O_AMGX) $(O_HYPRE) $(O_BACKEND_CUBISM); mkdir -p $(WRK) && emar rv $@ $O $(O_MPI) $(O_OPENCL) $(O_AMGX) $(O_HYPRE) $(O_BACKEND_CUBISM)
$(WRK)/$K: $O $(O_MPI) $(O_OPENCL) $(O_AMGX) $(O_HYPRE) $(O_BACKEND_CUBISM); mkdir -p $(WRK) && $(LINK) -shared -o $@ $O $(O_MPI) $(O_OPENCL) $(O_AMGX) $(O_HYPRE) $(O_BACKEND_CUBISM)
$(WRK)/.dir:; mkdir -p $P && > $@
$(SRC)/util/gitgen.cpp:; $(SRC)/gitrev $@
$(SRC)/explorer.inc:; out="$@" base=$(SRC)/../deploy/scripts/sim_base.conf wasm="$(SRC)/../examples/107_wasm/conf/std.conf" $(SRC)/explorer_gen
$(SRC)/linear/conjugate_cl.inc: $(SRC)/linear/conjugate_cl.cl
	$(SRC)/linear/kernel.gen $< $@
$(SRC)/opencl/kernels.inc: $(SRC)/opencl/kernels.cl
	cd $(SRC)/opencl && ./kernels.gen
install: $(WRK)/$L $(WRK)/main $(WRK)/explorer
	mkdir -p '$(APHROS_PREFIX)'/lib '$(APHROS_PREFIX)'/bin '$(APHROS_PREFIX)'/include
	for i in $D; \
	do mkdir -p '$(APHROS_PREFIX)'/include/aphros/$$i; \
	done
	cp aphros_c.h '$(APHROS_PREFIX)'/include
	for i in $H; \
	do cp $$i '$(APHROS_PREFIX)'/include/aphros/$$i; \
	done
	cp $(WRK)/$L '$(APHROS_PREFIX)'/lib
	cp $(WRK)/main '$(APHROS_PREFIX)'/bin/ap.mfer
	cp $(WRK)/explorer '$(APHROS_PREFIX)'/bin/ap.explorer
install_shared: $(WRK)/$K
	mkdir -p '$(APHROS_PREFIX)'/lib
	cp $< '$(APHROS_PREFIX)'/lib
bin: $B
shared: $(WRK)/$K
clean:
	-rm -f $O $(O_MPI) $(O_OPENCL) $(O_AMGX) $(O_HYPRE) $(O_BACKEND_CUBISM) $(WRK)/.dir $(WRK)/$L $(WRK)/$J $(WRK)/$K $B
	-rmdir -p $P
